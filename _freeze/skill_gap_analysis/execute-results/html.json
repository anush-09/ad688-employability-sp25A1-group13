{
  "hash": "dcf46386274686fc6672086ecbbbf125",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Skill Gap Analysis\"\nsubtitle: \"Group 13 Skill Assessments\"\nauthor:\n  - name: Anu Sharma, Cindy Guzman, Gavin Boss\n    affiliations:\n      - id: bu\n        name: Boston University\n        city: Boston\n        state: MA\nbibliography: references.bib\ncsl: csl/econometrica.csl\nformat: \n  html:\n    toc: true\n    number-sections: true\n    df-print: paged\n  docx: default\n---\n\n# Team Dataframe\n\nOur team conducted an overview of our current technical skills when it comes to Business Analytics and our skill levels. The goal was to understand where the group's strengths and weaknesses were and understand how the data that was collected could relate to the data that was observed in the research conducted. This was used to identify strengths and weaknesses for the group while also identifying potential gaps within the group.\n\n::: {#f77e4912 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n\n# Extended skills data\nskills_data = {\n    \"Name\": [\"Anu\", \"Cindy\", \"Gavin\"],\n    \"Data Analysis\": [5, 4, 4],\n    \"Python\": [3, 3, 3],\n    \"SQL\": [5, 3, 2],\n    \"Machine Learning\": [2, 2, 2],\n    \"Cloud Computing\": [3, 3, 2],\n    \"Power BI\": [3, 5, 3],\n    \n}\n\n# Create DataFrame and set index\ndf_skills = pd.DataFrame(skills_data).set_index(\"Name\")\n\n# Ensure all columns are numeric\ndf_skills = df_skills.apply(pd.to_numeric)\n\n# Add the Average row\ndf_skills[\"Average\"] = df_skills.mean(axis=1)\n\n# Style with borders and centered text\ndf_styled = df_skills.style.set_table_styles([\n    {'selector': 'th, td', 'props': [('border', '1px solid black'),\n                                     ('text-align', 'center')]}\n])\n\n# df_styled\n```\n:::\n\n\n::: {#cd4521bd .cell execution_count=2}\n``` {.python .cell-code}\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(12, 6))\nsns.heatmap(df_skills, annot=True, cmap=\"coolwarm\", linewidths=0.5)\nplt.title(\"Team Skill Levels Heatmap\")\nplt.xlabel(\"Technical Skills\", fontsize=14)\nplt.ylabel(\"Team Members\", fontsize=14)\nplt.xticks(rotation=30, fontsize=8)  \nplt.yticks(rotation=90, fontsize=8)\nannot_kws={\"fontsize\":8}\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](skill_gap_analysis_files/figure-html/cell-3-output-1.png){}\n:::\n:::\n\n\n# What the Heatmap Shows\n\nWhen looking at the heatmap it shows that our team still feels relatively new to these technical skills and highlighted in blue are the most notable areas for growth. One person in our group is a Business Analyst while the other two do not use these tools on a daily basis and due to this lack of exposure is likely to contribute to a lack of technical skill observed in the heatmap. Increased exposure and experience outside of an educational setting could contribute to increased technical skills within the group.\n\n**Data Analysis** represents the strongest skill that our group presents, while this isn't a program it was noted as one of the top skills that impacted salary, alongside experience and being remote. Regardless of the type of data analysis experience, having the ability to analyze data is more vital according to the data represented in the ML Model section of this website. Having a core analytical ability puts our group ahead of most candidates that have vast python experience depending on the types of jobs that they are looking to apply for, and adding the other analytical tools such as Python and Power BI only empower our group further in the ability to find higher paying jobs.\n\n**Power BI** is our second strongest skill as a group, and while this isn't a program that is used within the program it was also ranked number 10 when looking at the number times it was mentioned in job descriptions. As can be seen lower on this page it was mentioned 494 times. This is still a strong skill as it can be used in combination with other Microsoft suite programs such as Excel which had a count of 1494 in job descriptions. These, in combination with each other can help in qualifying for a greater number of jobs. Excel was excluded from the list of skills to conform to size but is without question also a valuable technical skill.\n\n**Python** is also a strong skill across the team and this is likely in large part due to the exposure that has occurred during this course, while no one in the group are experts in Python our technical skill levels indicate that we have a foundational understanding of the programming language and are able to navigate the complexities and manipulate data in order to meet organizational goals and objectives required for data analysis, automation, and model development that was observed during this course. \n\n**Cloud Computing** was one of the areas where we struggled as a group and this was in large part due to a lack of exposure and could likely increase in environments where this was utilized like our educational environment like this class.\n\n# Most in demand skills ranked\n\n::: {#c71ff37b .cell execution_count=3}\n``` {.python .cell-code}\n# Skill Key Words\nimport pandas as pd\nimport re\nfrom collections import Counter\n\n# Define the skills we are looking for\nskills_keywords = [\n    \"python\", \"sql\", \"machine learning\", \"cloud\", \"aws\", \"azure\",\n    \"docker\", \"java\", \"excel\", \"r\", \"linux\", \"tableau\", \"power bi\",\n    \"spark\", \"hadoop\", \"javascript\", \"c++\", \"pandas\", \"numpy\"\n]\n\n# Compile regex patterns for faster matching\npattern_dict = {skill: re.compile(rf\"\\b{re.escape(skill)}\\b\") for skill in skills_keywords}\n\n# Initialize a counter to store matches\nskill_counts = Counter()\n\n# Read the CSV in chunks to avoid memory overload\nchunk_size = 10000  # You can adjust this if your EC2 has more memory\nfor chunk in pd.read_csv(\n    \"data/lightcast_cleaned.csv\",\n    usecols=[\"BODY\"],\n    chunksize=chunk_size,\n    on_bad_lines=\"skip\",         # <-- skip broken lines instead of crashing\n    engine=\"python\",             # <-- slower but handles messy text safely\n    encoding=\"utf-8\",            # <-- explicitly set encoding\n    sep=\",\",                     # <-- enforce comma delimiter\n    quoting=3                    # <-- ignore quote mismatches\n):\n    \n    chunk = chunk[\"BODY\"].dropna().str.lower()\n    \n    # For each job description, count skill occurrences\n    for text in chunk:\n        for skill, pattern in pattern_dict.items():\n            skill_counts[skill] += len(pattern.findall(text))\n\n\ntop_skills = skill_counts.most_common(5)\n\nimport pandas as pd\n\n# Convert Counter to DataFrame\nskills_df = pd.DataFrame(skill_counts.items(), columns=[\"Skill\", \"Count\"])\n\n# Optional: sort by count descending\nskills_df = skills_df.sort_values(by=\"Count\", ascending=False).reset_index(drop=True)\nskills_df.head(10)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Skill</th>\n      <th>Count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>sql</td>\n      <td>4530</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>cloud</td>\n      <td>2638</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>python</td>\n      <td>1711</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>excel</td>\n      <td>1494</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>tableau</td>\n      <td>1222</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>r</td>\n      <td>743</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>azure</td>\n      <td>726</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>machine learning</td>\n      <td>672</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>power bi</td>\n      <td>494</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>java</td>\n      <td>473</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#3e6b4449 .cell execution_count=4}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nskills, counts = zip(*skill_counts.most_common(10))\n\n# Make figure taller for vertical bars, and increase quality of graphic\nplt.figure(figsize=(10, 6), dpi=300)\n\n# Unique color per bar\ncolors = plt.cm.tab10(np.linspace(0, 1, len(skills)))\n\n# Plot vertical bars\nbars = plt.bar(skills, counts, color=colors, edgecolor=\"black\")\n\n# Titles and labels\nplt.title(\"Top 10 Most Mentioned Skills in Job Descriptions\", fontsize=14, fontweight=\"bold\", pad=15)\nplt.xlabel(\"Skill\", fontsize=12)\nplt.ylabel(\"Frequency (Number of Mentions)\", fontsize=12)\n\n# Rotate x labels for readability\nplt.xticks(rotation=45, ha=\"right\", fontsize=10)\nplt.yticks(fontsize=10)\n\n# Add values on top of bars\nfor bar in bars:\n    plt.text(bar.get_x() + bar.get_width()/2, bar.get_height() + max(counts)*0.01,\n             f\"{bar.get_height():,}\", ha=\"center\", va=\"bottom\", fontsize=9, color=\"black\")\n\n# Gridlines and layout\nplt.grid(axis=\"y\", linestyle=\"--\", alpha=0.6)\nplt.tight_layout()\n\nplt.show()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](skill_gap_analysis_files/figure-html/cell-5-output-1.png){}\n:::\n:::\n\n\n# Addressing Skill Gaps\n\nWhen looking at our groupâ€™s skill gaps, the group should focus on our weakest points which are **Cloud Computing** and **Machine Learning**. \n\nFor **Cloud Computing** there are many programs that offer the ability to gain experience and knowledge on platform specific programs such as AWS, Azure, or Google Cloud Platform (GCP). These are just a few examples of ways that our group could continue to expand on their knowledge and grow their analytical toolkit to expand for the future and meet the ever-expanding requirements out in the job market. Cloud Computing is a great way to do it, as clouds are the highest noted keyword, indicating that there is increased work going on in the cloud. These programs can also include access to free tiers such as AWS, Azure or GCP to experiment, just like the EC2 we are using for this class currently!\n\nFor **Machine learning** our group is below average in technical skill level, with an average skill level of 2 out of 5. While this is mostly due to a lack of exposure, this can be overcome with practical exercises such as Datacamp, which states \"Machine learning courses cover algorithms and concepts for enabling computers to learn from data and make decisions without explicit programming. Build your skills in NLP, deep learning, MLOps and more.\" [@datacamp_ml]. This is a way to gain practical skills that can be translated into real world careers, but similar to how Power BI was mentioned above, Machine Learning is ranked on the lower end of the count when looking at Job Descriptions, which may just mean that these are less in demand jobs but not necessarily that they are lower paying jobs. This may not be as valuable a skill to learn as continuing to increase skills such as **Python**, **Cloud**, or **SQL**.\n\n# Comparing Top Job Market Skills\n\nThe Top 3 market skills include **SQL**, **Cloud**, and **Python**. When comparing our average skills (the last column of our heatmap) with these we can see that our group is about average in our perception of our technical skills, the top 3 jobs when it comes to description count. This again doesn't indicate that these jobs have the highest pay as the ML Methods tab will indicate the correlation between skills and salary where this data just indicates the amount of time that the skill itself was referenced. Improving these abilities even further could open the ability to increase job opportunities for the future. This was roughly 60% of the job postings when looking at just these Top 3 skills, and even just having average skills will put you in the upper quartile of employable candidates if you have this skill available. This data was not broken down into the experience level required, as this would be more enlightening to the requirements of employability with these skills, but these are the most common terms associated.\n\n# Summary\n\nWhen looking at our group, we still have improvements that can be done for our technical skills, but we have a good baseline for what the market is looking for in the job market and expanding on these skills as referenced above could give us an advantage in jobs in the future. There are many free alternatives to formal education methods to gain experience with these skills, and even on the job training is a good alternative to gain these experiences and get more proficient overall to improve overall. This class has given us a good baseline for improvement, and we will continue to refine our skills with outside education methods.\n\n",
    "supporting": [
      "skill_gap_analysis_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}
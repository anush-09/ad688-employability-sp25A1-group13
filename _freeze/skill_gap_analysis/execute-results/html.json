{
  "hash": "b952603609c9216fa2d0d8ff0dff30ff",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Skill Gap Analysis\"\nsubtitle: \"Group 13 Skill Assessments\"\nauthor:\n  - name: Anu Sharma, Cindy Guzman, Gavin Boss\n    affiliations:\n      - id: bu\n        name: Boston University\n        city: Boston\n        state: MA\nbibliography: references.bib\ncsl: csl/econometrica.csl\nformat: \n  html:\n    toc: true\n    number-sections: true\n    df-print: paged\n---\n\n# Team Dataframe\n\nOur team conducted  an overview of our current technical skills when it comes to Business Analytics and our skill levels. The goal was to understand where the group's strengths and weaknesses were, and understand how the data that was collected could relate to the data that was observed in the research conducted. This was used to identify strengths and weaknesses for the group while also identifying potential gaps within the group.\n\n::: {#34f38443 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n\n# Extended skills data\nskills_data = {\n    \"Name\": [\"Anu\", \"Cindy\", \"Gavin\"],\n    \"Data Analysis\": [3, 1, 4],\n    \"Python\": [5, 3, 4],\n    \"SQL\": [4, 2, 5],\n    \"Machine Learning\": [3, 1, 4],\n    \"Cloud Computing\": [2, 2, 3],\n    \"Power BI\": [3, 2, 4],\n    \n}\n\n# Create DataFrame and set index\ndf_skills = pd.DataFrame(skills_data).set_index(\"Name\")\n\n# Ensure all columns are numeric\ndf_skills = df_skills.apply(pd.to_numeric)\n\n# Add the Average row\ndf_skills[\"Average\"] = df_skills.mean(axis=1)\n\n# Style with borders and centered text\ndf_styled = df_skills.style.set_table_styles([\n    {'selector': 'th, td', 'props': [('border', '1px solid black'),\n                                     ('text-align', 'center')]}\n])\n\ndf_styled\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<style type=\"text/css\">\n#T_b2f00 th {\n  border: 1px solid black;\n  text-align: center;\n}\n#T_b2f00  td {\n  border: 1px solid black;\n  text-align: center;\n}\n</style>\n<table id=\"T_b2f00\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th id=\"T_b2f00_level0_col0\" class=\"col_heading level0 col0\" >Data Analysis</th>\n      <th id=\"T_b2f00_level0_col1\" class=\"col_heading level0 col1\" >Python</th>\n      <th id=\"T_b2f00_level0_col2\" class=\"col_heading level0 col2\" >SQL</th>\n      <th id=\"T_b2f00_level0_col3\" class=\"col_heading level0 col3\" >Machine Learning</th>\n      <th id=\"T_b2f00_level0_col4\" class=\"col_heading level0 col4\" >Cloud Computing</th>\n      <th id=\"T_b2f00_level0_col5\" class=\"col_heading level0 col5\" >Power BI</th>\n      <th id=\"T_b2f00_level0_col6\" class=\"col_heading level0 col6\" >Average</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Name</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n      <th class=\"blank col3\" >&nbsp;</th>\n      <th class=\"blank col4\" >&nbsp;</th>\n      <th class=\"blank col5\" >&nbsp;</th>\n      <th class=\"blank col6\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_b2f00_level0_row0\" class=\"row_heading level0 row0\" >Anu</th>\n      <td id=\"T_b2f00_row0_col0\" class=\"data row0 col0\" >3</td>\n      <td id=\"T_b2f00_row0_col1\" class=\"data row0 col1\" >5</td>\n      <td id=\"T_b2f00_row0_col2\" class=\"data row0 col2\" >4</td>\n      <td id=\"T_b2f00_row0_col3\" class=\"data row0 col3\" >3</td>\n      <td id=\"T_b2f00_row0_col4\" class=\"data row0 col4\" >2</td>\n      <td id=\"T_b2f00_row0_col5\" class=\"data row0 col5\" >3</td>\n      <td id=\"T_b2f00_row0_col6\" class=\"data row0 col6\" >3.333333</td>\n    </tr>\n    <tr>\n      <th id=\"T_b2f00_level0_row1\" class=\"row_heading level0 row1\" >Cindy</th>\n      <td id=\"T_b2f00_row1_col0\" class=\"data row1 col0\" >1</td>\n      <td id=\"T_b2f00_row1_col1\" class=\"data row1 col1\" >3</td>\n      <td id=\"T_b2f00_row1_col2\" class=\"data row1 col2\" >2</td>\n      <td id=\"T_b2f00_row1_col3\" class=\"data row1 col3\" >1</td>\n      <td id=\"T_b2f00_row1_col4\" class=\"data row1 col4\" >2</td>\n      <td id=\"T_b2f00_row1_col5\" class=\"data row1 col5\" >2</td>\n      <td id=\"T_b2f00_row1_col6\" class=\"data row1 col6\" >1.833333</td>\n    </tr>\n    <tr>\n      <th id=\"T_b2f00_level0_row2\" class=\"row_heading level0 row2\" >Gavin</th>\n      <td id=\"T_b2f00_row2_col0\" class=\"data row2 col0\" >4</td>\n      <td id=\"T_b2f00_row2_col1\" class=\"data row2 col1\" >4</td>\n      <td id=\"T_b2f00_row2_col2\" class=\"data row2 col2\" >5</td>\n      <td id=\"T_b2f00_row2_col3\" class=\"data row2 col3\" >4</td>\n      <td id=\"T_b2f00_row2_col4\" class=\"data row2 col4\" >3</td>\n      <td id=\"T_b2f00_row2_col5\" class=\"data row2 col5\" >4</td>\n      <td id=\"T_b2f00_row2_col6\" class=\"data row2 col6\" >4.000000</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n::: {#9574ec6b .cell execution_count=2}\n``` {.python .cell-code}\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(12, 6))\nsns.heatmap(df_skills, annot=True, cmap=\"coolwarm\", linewidths=0.5)\nplt.title(\"Team Skill Levels Heatmap\")\nplt.xlabel(\"Technical Skills\", fontsize=14)\nplt.ylabel(\"Team Members\", fontsize=14)\nplt.xticks(rotation=30, fontsize=8)  \nplt.yticks(rotation=90, fontsize=8)\nannot_kws={\"fontsize\":8}\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](skill_gap_analysis_files/figure-html/cell-3-output-1.png){}\n:::\n:::\n\n\n# What the Heatmap Shows\n\nWhen looking at the heatmap it shows that our team still feels relatively new to these technical skills and highlighted in blue are the most notable areas for growth. One person in our group is a Business Analyst while the other two do not use these tools on a daily basis and due to this lack of exposure likely contribute to a lack of technical skill observed in the heatmap. Increased exposure and experience outside of an educational setting could contribute to increased technical skills within the group.\n\n**Data Analysis** represents the strongest skill that our group presents, while this isn't a program it was noted as one of the top skills that impacted salary, alongside experience and being remote. Regardless of the type of data analysis experience, having the ability to analyze data is more vital according to the data represented in the ML Model section of this website. Having a core analytical ability puts our group ahead of most canidates that have vast python experience depending on the types of jobs that they are looking to apply for, and adding the other analytical tools such as Python and PowerBI only empower our group further in the ability to find higher paying jobs.\n\n**Python** is one of the strongest skills across the team and this is likely in large part due to the exposure that has occured during this course, while no one in the group are experts in Python our technical skill levels indicate that we have a foundational understanding of the programming language and are able to navigate the complexities and manipulate data in order to meet organizational goals and objectives required for data analysis, automation, and model development that was observed during this course. Cloud computing was one of the areas where we struggled as a group and this was in large part due to a lack of exposure and could likely increase in environments where this was utilized similar to our educational environment like this class.\n\n# Addressing Skill Gaps\n\nWhen looking at our groups skill gaps, the group should focus on our weakest points which are cloud computing and machine learning. Each group member can enroll in free online certifications such as certifications that were taken in this course that can enable learning about the systems that would be used like AWS or machine learning platforms. These platforms often provide trainings for little to no cost, and while attending a university can obtain discounts in order to obtain the certifications that would be required to enable jobs that would result in more exposure to amplify the skills to increase the proficiency for each individual in the group. AWS Certifications hold a majority of the market because of their market share, and starting with \n\n(Refine this, look at AWS classes and list what they can provide and how much they would cost, which ones are the most beneficial)\n\n\n\nFor Machine learning (find specific examples)\n\n::: {#9a9356f5 .cell execution_count=3}\n``` {.python .cell-code}\n# Skill Key Words\nimport pandas as pd\nimport re\nfrom collections import Counter\n\n# 1️⃣ Define the skills you want to look for\nskills_keywords = [\n    \"python\", \"sql\", \"machine learning\", \"cloud\", \"aws\", \"azure\",\n    \"docker\", \"java\", \"excel\", \"r\", \"linux\", \"tableau\", \"power bi\",\n    \"spark\", \"hadoop\", \"sas\", \"javascript\", \"c++\", \"pandas\", \"numpy\"\n]\n\n# 2️⃣ Compile regex patterns for faster matching\npattern_dict = {skill: re.compile(rf\"\\b{re.escape(skill)}\\b\") for skill in skills_keywords}\n\n# 3️⃣ Initialize a counter to store matches\nskill_counts = Counter()\n\n# 4️⃣ Read the CSV in chunks to avoid memory overload\nchunk_size = 10000  # You can adjust this if your EC2 has more memory\nfor chunk in pd.read_csv(\n    \"data/lightcast_cleaned.csv\",\n    usecols=[\"BODY\"],\n    chunksize=chunk_size,\n    on_bad_lines=\"skip\",         # <-- skip broken lines instead of crashing\n    engine=\"python\",             # <-- slower but handles messy text safely\n    encoding=\"utf-8\",            # <-- explicitly set encoding\n    sep=\",\",                     # <-- enforce comma delimiter\n    quoting=3                    # <-- ignore quote mismatches\n):\n    # Drop missing text and convert to lowercase\n    chunk = chunk[\"BODY\"].dropna().str.lower()\n    \n    # For each job description, count skill occurrences\n    for text in chunk:\n        for skill, pattern in pattern_dict.items():\n            skill_counts[skill] += len(pattern.findall(text))\n\n# 5️⃣ Get the top 5 most common skills\ntop_skills = skill_counts.most_common(5)\n\n# 6️⃣ Print results neatly\nprint(\"Top 5 Most Mentioned Skills:\\n\")\nfor skill, count in top_skills:\n    print(f\"{skill.title()}: {count}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTop 5 Most Mentioned Skills:\n\nSql: 4530\nCloud: 2638\nPython: 1711\nExcel: 1494\nTableau: 1222\n```\n:::\n:::\n\n\n::: {#6125972b .cell execution_count=4}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Extract skills and counts\nskills, counts = zip(*skill_counts.most_common(10))\n\n# Set up the figure\nplt.figure(figsize=(10, 6))\n\n# Use a qualitative colormap for distinct colors\ncolors = plt.cm.tab10(np.linspace(0, 1, len(skills)))\n\n# Create the bar chart\nbars = plt.barh(skills, counts, color=colors, edgecolor=\"black\")\n\n# Invert y-axis so the top skill appears at the top\nplt.gca().invert_yaxis()\n\n# Titles and labels\nplt.title(\"Top 10 Most Mentioned Skills in Job Descriptions\", fontsize=14, fontweight=\"bold\", pad=15)\nplt.xlabel(\"Frequency (Number of Mentions)\", fontsize=12)\nplt.ylabel(\"Skill\", fontsize=12)\n\n# Add value labels\nfor bar in bars:\n    width = bar.get_width()\n    plt.text(width + max(counts) * 0.01, bar.get_y() + bar.get_height() / 2,\n             f\"{width:,}\", va=\"center\", fontsize=10, color=\"black\")\n\n# Style adjustments\nplt.grid(axis=\"x\", linestyle=\"--\", alpha=0.6)\nplt.tight_layout()\n\n# Show the plot\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](skill_gap_analysis_files/figure-html/cell-5-output-1.png){}\n:::\n:::\n\n\n# Comparing Top Job Market Skills\n\nWhen looking at the most important skill gaps to consider in terms of the job market, we compared our average skills (last column of the heatmap) with the most in demand across all job descriptions within the dataset. This revealed that we should focus on improving our abilities in data analysis, along with python. While our group has had some introductory knowledge into Python in this class there are still advances that could be made in order to continue to grow and become proficient and employable at a high level. Below are two charts that break down the teams skills average skills vs the same skills that are in demand within the data set provided for this assignment.\n\n(Results of the chart)\n\nData Analysis...\n\nPython...\n\nAssessment ...\n\n# Most in demand skills ranked\n\n(show them)\n\nShow the steps to get there\n\n# Summary\n\n# References\n\n",
    "supporting": [
      "skill_gap_analysis_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}
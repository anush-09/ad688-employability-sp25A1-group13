---
title: "Business Analytics, Data Science and Machine Learning Trends"
author: "Anu Sharma, Cindy Guzman, Gavin Boss"
date: "2025-09-10"
format:
  html:
    bibliography: references.bib
    csl: csl/econometrica.csl
    toc: true
execute:
  echo: true
  eval: true
code-fold: true
---
```{python}
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Fixed: matching number of values with number of names, we need to make sure that we update these values and update the formatting, this is just a baseline to get it working
skills_data = {
    "Name": ["Anu", "Cindy", "Gavin"],
    "Python": [5, 3, 4],
    "SQL": [4, 2, 5],
    "Machine Learning": [3, 1, 4],
    "Cloud Computing": [2, 2, 3]
    
}

df_skills = pd.DataFrame(skills_data)
df_skills.set_index("Name", inplace=True)
df_skills["Average Skill"] = df_skills.mean(axis=1).round(2)


# Display the dataframe
print(df_skills)

# Create heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(df_skills, annot=True, cmap="coolwarm", linewidths=0.5, fmt='0.2f')
plt.title("Team Skill Levels Heatmap")

plt.show()
```

```{python}
from collections import Counter

# Assuming job_descriptions is a list of text from job postings
top_skills = ["Python", "SQL", "Machine Learning", "Cloud Computing", "Docker", "AWS"]
job_skill_counts = Counter(top_skills)

# Compare with team skill levels
for skill in top_skills:
    if skill not in df_skills.columns:
        df_skills[skill] = 0  # Assume no knowledge in missing skills

df_skills
```

## Our team should prioritize learning X skills (need to look at the data in order to ensure that we compare it to the data that meets the job postings)
## courses that we could take that could help
## How the team can help eachother, this would be like if one of us was better at other areas as opposed to other areas, say one of us is better at machine learning, we could leverage learning from them in order to gain a better understanding.